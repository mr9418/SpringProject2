<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.manamana.file.dao.MemberDAO">

	<!-- 저장하기 -->
	<insert id="insert" parameterType="MemberVO">
		insert into member
		values
		(member_idx_seq.nextval,#{userid},#{password},#{username},
		#{nickname},#{birth},#{phone},#{zipcode},#{addr1},
		#{addr2},0,SYSDATE)
	</insert>
	<!-- 한개구하기 -->
	<select id="selectByIdx" parameterType="int"
		resultType="MemberVO">
		select * from member where idx=#{idx}
	</select>
	<select id="selectById" parameterType="string"
		resultType="memberVO">
		select * from member where userid =#{userid}
	</select>
	<select id="loginCheck" parameterType="string"
		resultType="memberVO">
		select * from member where userid=#{userid}
	</select>
	<!-- 수정하기 -->
	<update id="update" parameterType="MemberVO">
		update member set
		username=#{username},
		nickname=#{nickname},
		phone = #{phone},
		zipcode = #{zipcode},
		addr1 = #{addr1},
		addr2 = #{addr2}
		where
		idx=#{idx}
	</update>
	<!-- 삭제하기 -->
	<delete id="delete" parameterType="int">
		delete from member where
		idx=#{idx}
	</delete>
	<!-- 리스트구하기 -->
	<select id="selectList" resultType="MemberVO">
		select * from member order by
		idx desc
	</select>
	<!-- 개수세기 -->
	<select id="getCount" resultType="int">
		select count(*) from member
	</select>
	<!-- id세기 -->
	<select id="selectByUserID" parameterType="java.util.HashMap"
		resultType="MemberVO">
		select * from member where userid=#{userid}
	</select>
	<!-- 이름세기 -->
	<select id="selectByUserName" parameterType="java.util.HashMap"
		resultType="MemberVO">
		select * from member where username=#{username} and
		phone=#{phone}
	</select>

	<update id="updateUse" parameterType="java.util.HashMap">
		update member set
		use=#{use} where userid=#{userid}
	</update>

	<update id="updatePassword" parameterType="java.util.HashMap">
		update member set
		password=#{password} where userid=#{userid}
	</update>

	<insert id="insertRole" parameterType="memberRoleVO">
		INSERT INTO MEMBER_ROLE VALUES (#{username},#{role})
	</insert>

	<select id="selectRoleList" parameterType="string"	resultType="memberRoleVO">
   		<![CDATA[
  			select * from member_Role where username=#{username}
   		]]>
	</select>

</mapper>